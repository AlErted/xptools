------------------------------------------------------------------------------							LIB SRC NOTES------------------------------------------------------------------------------These libraries are all open source (GPL/LGPL/X11/QPL) libraries used for various parts of the scenery system and related tools.------------------------------------------------------------------------------LICENSING------------------------------------------------------------------------------X11 indicates an X-11 style license, e.g. no copying restrictions, but notnecessarily the specific original MIT/X11 license.	boost_1_31_0		MIT/X11	CGAL-3.0			QPL (GPL-like)	cv97				GPL	dime				GPL (author now says LGPL)	expat				MIT/X11	freetype-2.2.1		MIT/X11-like	jpeg-6b				MIT/X11-like	lib3ds-1.2.0		LGPL	libgeotiff-1.2.2	MIT/X11	libpng-1.2.12		MIT/X11-like (or LGPL-like)?	proj-4.4.8			MIT/X11	sdts++-1.5.1		public domain	shapelib-1.2.10		LGPL	sqlite-3.3.11		public domain	sqlitedll-3_3_17	public domain	squish-1.10			MIT/X11	tiff-3.8.2			MIT/X11	zlib-1.1.4			MIT/X11Please note that both the CGAL and CV97 require a contageous copyleft license!CGAL is currently only used in the rendering farm (program that builds global scenery), not WED, and CV97 is no longer used at all, I think.------------------------------------------------------------------------------INSTALLATION INSTRUCTIONS - WINDOWS------------------------------------------------------------------------------The project is almost ready to compile WED on Windows, using Visual Studio 8express edition.  Before you can do this (assuming the win32 platform SDKis already installed you'll have to make three changes).- In /libsrc/tiff-3.8.2/libtiff/ 	copy tif_config.h.vc and name it tif_config.h- In /libsrc/freetype-2.2.1/builds/win32/visualc 	build the solution freetype.sln.- You must add glext.h to your include/GL folder in your VC plaform SDK.Solution is stored in /SceneryToolsWin/SceneryToolsWin.sln and can currentlycompile ObjView and WED.(Note: RenderFarm has serious portability issues - I do not expect it to everbe ported to a non-Unix environment!!)The ac3d plugin for Windows is actually compiled on CodeWarrior, and I onlyknow that it works when compiling from Mac.  The project is stored in/XPExporter.mcp.  	------------------------------------------------------------------------------INSTALLATION INSTRUCTIONS - MACINTOSH------------------------------------------------------------------------------X-Code 2.4 projects are found in the root:XPExporter.xcodeproj - AC3D export plugin.SceneryTools.xcodeproj - WED, ObjView, ObjGrinder, DDSTool, DSFTool, 	ObjConverter, RenderFarm, RenderFarm with viewing UI.Before compiling these projects, you may need to compile and install some ofthe libraries found in libsrc.  Here are the instructions:(All installations will end up in /usr/local/lib/)	sqlite		chmod u+x configure		./configure		make		sudo make install	PNGLIB																					chmod u+x configure		./configure		make check		sudo make install								JPEG																					chmod u+x configure		./configure		make		sudo make install		sudo make install-lib	Tiff (do before libgeotiff) 3.8.2														chmod u+x configure		./configure --mandir=/usr/local/share/man		make		sudo make install	Proj		./configure --mandir=/usr/local/share/man		make		sudo make install	LibGeoTiff (1.2.2 - 1.2.3 appears to be borked??)		chmod u+x configure		./configure --mandir=/usr/local/share/man  --with-proj=/usr/local		make		sudo make install	dime				chmod u+x configure		./configure --enable-static=yes --enable-shared=no		make				sudo make install	lib3ds...					chmod u+x configure		./configure		make		sudo make install		freetype (2.2.1)		chmod u+x configure		./conifigure		make		sudo make install				NOTE: you may need to run ranlib on a library - simply do	ranlib <file>	and generally x-code will shut up.						FOR UNIVERSAL		I have been attempting to install the libraries universally so that I 	can do universal builds of WED.  These are the instructions, however	for the most part it has not worked. 			instead of		./confgure 				use				env CFLAGS="-O -g -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -arch ppc" LDFLAGS="-arch i386 -arch ppc" ./configure --disable-dependency-tracking		instead of		./confgure --mandir=/usr/local/share/man		use				env CFLAGS="-O -g -isysroot /Developer/SDKs/MacOSX10.4u.sdk -arch i386 -arch ppc" LDFLAGS="-arch i386 -arch ppc" ./configure --disable-dependency-tracking --mandir=/usr/local/share/man	As a backup procedure for most of the libs, which will NOT build universal, I "prep" my release machine in the following PITA manner:		1. I install all of the libs required on TWO machines (one ppc, one x86).	2. I use lipo to merge the ppc builds into the x86 builds in /usr/local/lib for any non-fat binary.	3. At this point that machine is now ready to build universal releases