diff -Naur CGAL-3.3.1/orig_include/CGAL/Arr_accessor.h CGAL-3.3.1/include/CGAL/Arr_accessor.h
--- CGAL-3.3.1/orig_include/CGAL/Arr_accessor.h	2007-08-25 15:01:33.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/Arr_accessor.h	2009-04-01 21:19:51.000000000 -0400
@@ -225,6 +225,9 @@
     return (p_arr->_handle_for (p_arr->v_tr));
   }
 
+  // BAS hack 
+  DFace * un_face() { return p_arr->un_face; }
+
   /*! Get the fictitious face of the arrangement (non-const version). */
   Face_handle fictitious_face ()
   {
diff -Naur CGAL-3.3.1/orig_include/CGAL/Arr_landmarks_point_location.h CGAL-3.3.1/include/CGAL/Arr_landmarks_point_location.h
--- CGAL-3.3.1/orig_include/CGAL/Arr_landmarks_point_location.h	2007-08-25 15:01:32.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/Arr_landmarks_point_location.h	2009-04-01 21:19:51.000000000 -0400
@@ -158,7 +158,7 @@
     CGAL_assertion(lm_gen != NULL);
     if (lm_gen)
     {
-      lm_gen->detach(p_arr);    
+      lm_gen->detach(/*p_arr*/);    
     }
   }
   
diff -Naur CGAL-3.3.1/orig_include/CGAL/Convex_hull_2/ch_assertions.h CGAL-3.3.1/include/CGAL/Convex_hull_2/ch_assertions.h
--- CGAL-3.3.1/orig_include/CGAL/Convex_hull_2/ch_assertions.h	2007-08-25 15:01:33.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/Convex_hull_2/ch_assertions.h	2009-04-01 21:42:20.000000000 -0400
@@ -26,6 +26,8 @@
 // ----------
 
 
+#ifndef CGAL_ch_assertion
+
 #if defined(CGAL_CH_NO_ASSERTIONS) || defined(CGAL_NO_ASSERTIONS) \
   || defined(NDEBUG)
 #  define CGAL_ch_assertion(EX) ((void)0)
@@ -264,3 +266,4 @@
 #endif // CGAL_CH_NO_WARNINGS
 
 
+#endif 
diff -Naur CGAL-3.3.1/orig_include/CGAL/General_polygon_set_2.h CGAL-3.3.1/include/CGAL/General_polygon_set_2.h
--- CGAL-3.3.1/orig_include/CGAL/General_polygon_set_2.h	2007-08-25 15:01:32.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/General_polygon_set_2.h	2009-04-01 21:19:51.000000000 -0400
@@ -55,7 +55,7 @@
   typedef std::size_t                                     Size;
 
 private:
-  typedef General_polygon_set_2<Traits_>                  Self;
+  typedef General_polygon_set_2<Traits_,Dcel_>            Self;
   typedef typename Traits_2::Point_2                      Point_2;
   typedef typename Traits_2::X_monotone_curve_2           X_monotone_curve_2;
   
diff -Naur CGAL-3.3.1/orig_include/CGAL/Polygon_2/polygon_assertions.h CGAL-3.3.1/include/CGAL/Polygon_2/polygon_assertions.h
--- CGAL-3.3.1/orig_include/CGAL/Polygon_2/polygon_assertions.h	2007-08-25 15:01:33.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/Polygon_2/polygon_assertions.h	2009-04-01 21:35:58.000000000 -0400
@@ -27,7 +27,7 @@
 // assertions
 // ----------
 
-
+#ifndef CGAL_polygon_assertion
 #if defined(CGAL_POLYGON_NO_ASSERTIONS) || defined(CGAL_NO_ASSERTIONS) \
   || defined(NDEBUG)
 #  define CGAL_polygon_assertion(EX) (static_cast<void>(0))
@@ -264,4 +264,4 @@
    ((EX)?(static_cast<void>(0)): ::CGAL::warning_fail( # EX , __FILE__, __LINE__, MSG))
 #  define CGAL_polygon_expensive_exactness_warning_code(CODE) CODE
 #endif // CGAL_POLYGON_NO_WARNINGS
-
+#endif
diff -Naur CGAL-3.3.1/orig_include/CGAL/centroid.h CGAL-3.3.1/include/CGAL/centroid.h
--- CGAL-3.3.1/orig_include/CGAL/centroid.h	2007-08-25 15:01:33.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/centroid.h	2009-04-01 21:19:51.000000000 -0400
@@ -60,7 +60,7 @@
     v = v + (*begin++ - ORIGIN);
     nb_pts++;
   }
-  return ORIGIN + v / (FT)nb_pts;
+  return ORIGIN + v / (FT)(int)nb_pts;
 }// end centroid of a 2D point set
 
 // computes the centroid of a 3D point set
diff -Naur CGAL-3.3.1/orig_include/CGAL/triangulation_assertions.h CGAL-3.3.1/include/CGAL/triangulation_assertions.h
--- CGAL-3.3.1/orig_include/CGAL/triangulation_assertions.h	2007-08-25 15:01:32.000000000 -0400
+++ CGAL-3.3.1/include/CGAL/triangulation_assertions.h	2009-04-01 21:19:51.000000000 -0400
@@ -24,7 +24,7 @@
 // assertions
 // ----------
 
-
+#ifndef CGAL_triangulation_assertion
 #if defined(CGAL_TRIANGULATION_NO_ASSERTIONS) || defined(CGAL_NO_ASSERTIONS) \
   || defined(NDEBUG)
 #  define CGAL_triangulation_assertion(EX) (static_cast<void>(0))
@@ -261,5 +261,5 @@
    ((EX)?(static_cast<void>(0)): ::CGAL::warning_fail( # EX , __FILE__, __LINE__, MSG))
 #  define CGAL_triangulation_expensive_exactness_warning_code(CODE) CODE
 #endif // CGAL_TRIANGULATION_NO_WARNINGS
-
+#endif
 
